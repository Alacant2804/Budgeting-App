// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountCategory {
  CHECKING
  SAVINGS
  CREDIT
  REAL_ESTATE
  VEHICLE
  LOAN
  INVESTMENT
  CUSTOM
}

enum IncomeCategory {
  SALARY
  BUSINESS
  INVESTMENT
  RENTAL
  CASHBACK
  CUSTOM
}

enum ExpenseCategory {
  HOUSING
  UTILITIES
  TRANSPORTATION
  GROCERIES
  EATING_OUT
  SPORT
  EDUCATION
  GIFTS
  PERSONAL_CARE
  INSURANCE
  HEALTHCARE
  ENTERTAINMENT
  SHOPPING
  CLOTHES
  TRAVEL
  CHARITY
  TAXES
  CUSTOM
}

// Models
model Transaction {
  id          Int      @id @default(autoincrement())
  fromType    String
  fromId      Int
  toType      String
  toId        Int
  amount      Float
  date        DateTime
  category    String
  description String?
}

model Income {
  id         Int      @id @default(autoincrement())
  amount     Float
  name       String
  category   IncomeCategory @default(CUSTOM)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Account {
  id          Int      @id @default(autoincrement())
  name        String
  balance     Float
  category    AccountCategory @default(CUSTOM)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Expense {
  id              Int            @id @default(autoincrement())
  name            String
  amount          Float
  category        ExpenseCategory @default(CUSTOM)
  icon            String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime @updatedAt
  plannedExpense  PlannedExpense? @relation(fields: [plannedExpenseId], references: [id])
  plannedExpenseId Int?          @unique
}

model PlannedExpense {
  id         Int      @id @default(autoincrement())
  amount     Float
  expense    Expense? @relation
}

